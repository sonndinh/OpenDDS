name: "Build & Test"

on:
  push:
    branches:
      - master
      - branch-DDS-3.*
      - gh_wf_*
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "pull_request.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!.github/workflows/sphinx_strict.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/gitrelease.pl'
      - '!tools/scripts/lint.pl'
      - '!**.md'
      - '!**.rst'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'
  pull_request:
    branches:
      - master
      - branch-DDS-3.*
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "push.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!.github/workflows/sphinx_strict.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/gitrelease.pl'
      - '!tools/scripts/lint.pl'
      - '!**.md'
      - '!**.rst'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TRIGGERING_COMMIT: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:

  ACE_TAO_w22_x86_i0:

    runs-on: windows-2022

    steps:
    - name: get network interface information (pre-build)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (pre-build)
      shell: cmd
      run: ipconfig /displaydns
    - name: checkout OpenDDS
      uses: actions/checkout@v3
      with:
        path: OpenDDS
        submodules: true
    - name: checkout ACE_TAO
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: OpenDDS/ACE_TAO
    - name: get ACE_TAO commit
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        export ACE_COMMIT=$(git rev-parse HEAD)
        echo "ACE_COMMIT=$ACE_COMMIT" >> $GITHUB_ENV
    - name: get compiler version
      shell: bash
      run: |
        export COMPILER_VERSION=$("C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -property catalog_productDisplayVersion)
        echo "COMPILER_VERSION=$COMPILER_VERSION" >> $GITHUB_ENV
    - name: Cache Artifact
      id: cache-artifact
      uses: actions/cache@v3
      with:
        path: ${{ github.job }}.tar.xz
        key: c02_${{ github.job }}_ace6tao2_${{ env.ACE_COMMIT }}_${{ env.COMPILER_VERSION }}
    - name: install openssl & xerces-c
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgGitCommitId: b86c0c35b88e2bf3557ff49dc831689c2f085090
        vcpkgArguments: --recurse openssl xerces-c
        vcpkgTriplet: x86-windows
    - name: checkout MPC
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: set up msvc env
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
    - name: configure OpenDDS
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        cd OpenDDS
        call configure -v --no-inline --tests --security --ace=%GITHUB_WORKSPACE%/OpenDDS/ACE_TAO/ACE --tao=%GITHUB_WORKSPACE%/OpenDDS/ACE_TAO/TAO --mpc=%GITHUB_WORKSPACE%/MPC --xerces3=%VCPKG_ROOT%/installed/x86-windows --openssl=%VCPKG_ROOT%/installed/x86-windows --mpcopts=-hierarchy
        perl tools\scripts\show_build_config.pl
    - name: build ACE & TAO
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        cd OpenDDS
        call setenv.cmd
        cd ACE_TAO\ACE
        msbuild -p:Configuration=Debug,Platform=Win32 -m ace.sln
        cd ..\TAO
        msbuild -p:Configuration=Debug,Platform=Win32 -m tao.sln
    - name: get network interface information (post-build)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (post-build)
      shell: cmd
      run: ipconfig /displaydns
    - name: create ACE_TAO tar.xz artifact
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        perl -ni.bak -e "print unless /opendds/" ACE/bin/MakeProjectCreator/config/default.features # remove opendds features from here, let individual build configure scripts handle those
        find . -iname "*\.obj" | xargs rm
        tar cvf ../../${{ github.job }}.tar ACE/ace/config.h
        git clean -xdfn | cut -d ' ' -f 3- | xargs tar uvf ../../${{ github.job }}.tar
        xz -3 ../../${{ github.job }}.tar
    - name: upload ACE_TAO artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz

  build_w22_x86_i0_sec:

    runs-on: windows-2022

    needs: ACE_TAO_w22_x86_i0

    steps:
    - name: get network interface information (pre-build)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (pre-build)
      shell: cmd
      run: ipconfig /displaydns
    - name: install openssl & xerces-c
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgGitCommitId: b86c0c35b88e2bf3557ff49dc831689c2f085090
        vcpkgArguments: --recurse openssl xerces-c
        vcpkgTriplet: x86-windows
    - name: remove unused files
      shell: bash
      run: |
        cd vcpkg
        rm -rf buildtrees downloads
    - name: checkout MPC
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: checkout OpenDDS
      uses: actions/checkout@v3
      with:
        path: OpenDDS
        submodules: true
    - name: checkout ACE_TAO
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: ACE_TAO
    - name: download ACE_TAO artifact
      uses: actions/download-artifact@v3
      with:
        name: ACE_TAO_w22_x86_i0_artifact
        path: ACE_TAO
    - name: extract ACE_TAO artifact
      shell: bash
      run: |
        cd ACE_TAO
        tar xvfJ ACE_TAO_w22_x86_i0.tar.xz
        rm -f ACE_TAO_w22_x86_i0.tar.xz
    - name: move OpenDDS to C drive
      shell: bash
      run: |
        mv OpenDDS /c/
    - name: set up msvc env
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
    - name: configure OpenDDS
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        configure --tests --rapidjson --security --ace=%GITHUB_WORKSPACE%\ACE_TAO\ACE --tao=%GITHUB_WORKSPACE%\ACE_TAO\TAO --mpc=%GITHUB_WORKSPACE%\MPC --xerces3=%VCPKG_ROOT%\installed\x86-windows --openssl=%VCPKG_ROOT%\installed\x86-windows
    - name: check build configuration
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        call setenv.cmd
        perl tools\scripts\show_build_config.pl
    - uses: ammaraskar/msvc-problem-matcher@0.1
    - name: build OpenDDS
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        call setenv.cmd
        msbuild -p:Configuration=Debug,Platform=Win32 -m DDS.sln
    - name: get network interface information (post-build)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (post-build)
      shell: cmd
      run: ipconfig /displaydns
    - name: create OpenDDS tar.xz artifact
      shell: bash
      run: |
        cd /c/OpenDDS
        find . -iname "*\.obj" -o -iname "*\.pdb" -o -iname "*\.idb" -o -type f -iname "*\.tlog" | xargs rm
        tar cvf ../${{ github.job }}.tar setenv.cmd
        git clean -xdfn | cut -d ' ' -f 3- | xargs tar uvf ../${{ github.job }}.tar
        xz -3 ../${{ github.job }}.tar
        mv ../${{ github.job }}.tar.xz $GITHUB_WORKSPACE
    - name: upload OpenDDS artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz

  cmake_w22_x86_i0_sec:

    runs-on: windows-2022

    needs: build_w22_x86_i0_sec

    steps:
    - name: get network interface information (begin)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (begin)
      shell: cmd
      run: ipconfig /displaydns
    - name: install openssl & xerces-c
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgGitCommitId: b86c0c35b88e2bf3557ff49dc831689c2f085090
        vcpkgArguments: --recurse openssl xerces-c
        vcpkgTriplet: x86-windows
    - name: checkout MPC
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: checkout autobuild
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/autobuild
        path: autobuild
    - name: checkout OpenDDS
      uses: actions/checkout@v3
      with:
        path: OpenDDS
        submodules: true
    - name: checkout ACE_TAO
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: ACE_TAO
    - name: download ACE_TAO artifact
      uses: actions/download-artifact@v3
      with:
        name: ACE_TAO_w22_x86_i0_artifact
        path: ACE_TAO
    - name: extract ACE_TAO artifact
      shell: bash
      run: |
        cd ACE_TAO
        tar xvfJ ACE_TAO_w22_x86_i0.tar.xz
        rm -f ACE_TAO_w22_x86_i0.tar.xz
    - name: download OpenDDS artifact
      uses: actions/download-artifact@v2
      with:
        name: build_w22_x86_i0_sec_artifact
        path: OpenDDS
    - name: extract OpenDDS artifact
      shell: bash
      run: |
        cd OpenDDS
        tar xvfJ build_w22_x86_i0_sec.tar.xz
        rm -f build_w22_x86_i0_sec.tar.xz
    - name: move OpenDDS to C drive
      shell: bash
      run: |
        mv OpenDDS /c/
    - name: set up msvc env
      uses: ilammy/msvc-dev-cmd@v1.9.0
    - uses: ammaraskar/msvc-problem-matcher@0.1
    - name: Build CMake Tests
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        call setenv.cmd
        mkdir tests\cmake\build
        cd tests\cmake\build
        cmake -A Win32 ..
        cmake --build .
    - name: check build configuration
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        call setenv.cmd
        perl tools\scripts\show_build_config.pl
    - name: create autobuild config
      shell: bash
      run: |
        cd /c/OpenDDS
        mkdir ${{ github.job }}_autobuild_workspace
        cd ${{ github.job }}_autobuild_workspace
        echo using commit $TRIGGERING_COMMIT for SHA
        echo $TRIGGERING_COMMIT >> ./SHA
        cat > config.xml <<EOF
        <autobuild>
        <configuration>
        <variable name="log_file" value="output.log"/>
        <variable name="log_root" value="C:/OpenDDS/${{ github.job }}_autobuild_workspace"/>
        <variable name="project_root" value="C:/OpenDDS"/>
        <variable name="root" value="C:/OpenDDS/${{ github.job }}_autobuild_workspace"/>
        <variable name="junit_xml_output" value="Tests"/>
        </configuration>
        <command name="log" options="on"/>
        <command name="print_os_version"/>
        <command name="print_env_vars"/>
        <command name="print_ace_config"/>
        <command name="print_cmake_version"/>
        <command name="print_make_version"/>
        <command name="check_compiler" options="msvc"/>
        <command name="print_perl_version"/>
        <command name="print_autobuild_config"/>
        <command name="auto_run_tests" options="script_path=tests dir=C:/OpenDDS --no-dcps --cmake"/>
        <command name="log" options="off"/>
        <command name="process_logs" options="prettify"/>
        </autobuild>
        EOF
    - name: get network interface information (pre-test)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (pre-test)
      shell: cmd
      run: ipconfig /displaydns
    - name: run OpenDDS CMake tests
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        call setenv.cmd
        cd ${{ github.job }}_autobuild_workspace
        perl "%GITHUB_WORKSPACE%\autobuild\autobuild.pl" "C:\OpenDDS\${{ github.job }}_autobuild_workspace\config.xml"
    - name: get network interface information (post-test)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (post-test)
      shell: cmd
      run: ipconfig /displaydns
    - name: upload autobuild output
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}_autobuild_output
        path: C:\OpenDDS\${{ github.job }}_autobuild_workspace
    - name: check results
      shell: bash
      run: |
        /c/OpenDDS/tools/scripts/autobuild_brief_html_to_text.pl "/c/OpenDDS/${{ github.job }}_autobuild_workspace/output.log_Brief.html"
        cat "/c/OpenDDS/${{ github.job }}_autobuild_workspace/latest.txt"
        grep -q 'Failures: 0' "/c/OpenDDS/${{ github.job }}_autobuild_workspace/latest.txt"

  test_w22_x86_i0_sec:

    runs-on: windows-2022

    needs: build_w22_x86_i0_sec

    steps:
    - name: get network interface information (begin)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (begin)
      shell: cmd
      run: ipconfig /displaydns
    - name: install openssl & xerces-c
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgGitCommitId: b86c0c35b88e2bf3557ff49dc831689c2f085090
        vcpkgArguments: --recurse openssl xerces-c
        vcpkgTriplet: x86-windows
    - name: checkout MPC
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: checkout autobuild
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/autobuild
        path: autobuild
    - name: checkout OpenDDS
      uses: actions/checkout@v3
      with:
        path: OpenDDS
        submodules: true
    - name: checkout ACE_TAO
      uses: actions/checkout@v3
      with:
        repository: DOCGroup/ACE_TAO
        ref: ace6tao2
        path: ACE_TAO
    - name: download ACE_TAO artifact
      uses: actions/download-artifact@v2
      with:
        name: ACE_TAO_w22_x86_i0_artifact
        path: ACE_TAO
    - name: extract ACE_TAO artifact
      shell: bash
      run: |
        cd ACE_TAO
        tar xvfJ ACE_TAO_w22_x86_i0.tar.xz
        rm -f ACE_TAO_w22_x86_i0.tar.xz
    - name: download OpenDDS artifact
      uses: actions/download-artifact@v2
      with:
        name: build_w22_x86_i0_sec_artifact
        path: OpenDDS
    - name: extract OpenDDS artifact
      shell: bash
      run: |
        cd OpenDDS
        tar xvfJ build_w22_x86_i0_sec.tar.xz
        rm -f build_w22_x86_i0_sec.tar.xz
    - name: move OpenDDS to C drive
      shell: bash
      run: |
        mv OpenDDS /c/
    - name: setup gtest
      shell: cmd
      run: |
        cd /d C:\OpenDDS\tests\googletest
        git submodule init
        git submodule update
        mkdir build
        cd build
        mkdir install
        cmake -DCMAKE_INSTALL_PREFIX=./install -A Win32 ..
        cmake --build . --target install
    - name: set up msvc env
      uses: ilammy/msvc-dev-cmd@v1
    - name: check build configuration
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        call setenv.cmd
        perl tools\scripts\show_build_config.pl
    - name: create autobuild config
      shell: bash
      run: |
        cd /c/OpenDDS
        mkdir ${{ github.job }}_autobuild_workspace
        cd ${{ github.job }}_autobuild_workspace
        echo using commit $TRIGGERING_COMMIT for SHA
        echo $TRIGGERING_COMMIT >> ./SHA
        cat > config.xml <<EOF
        <autobuild>
        <configuration>
        <variable name="log_file" value="output.log"/>
        <variable name="log_root" value="C:/OpenDDS/${{ github.job }}_autobuild_workspace"/>
        <variable name="project_root" value="C:/OpenDDS"/>
        <variable name="root" value="C:/OpenDDS/${{ github.job }}_autobuild_workspace"/>
        <variable name="junit_xml_output" value="Tests"/>
        </configuration>
        <command name="log" options="on"/>
        <command name="print_os_version"/>
        <command name="print_env_vars"/>
        <command name="print_ace_config"/>
        <command name="print_cmake_version"/>
        <command name="print_make_version"/>
        <command name="check_compiler" options="msvc"/>
        <command name="print_perl_version"/>
        <command name="print_autobuild_config"/>
        <command name="auto_run_tests" options="script_path=tests dir=C:/OpenDDS -Config DCPS_MIN"/>
        <command name="log" options="off"/>
        <command name="process_logs" options="prettify"/>
        </autobuild>
        EOF
    - name: get network interface information (pre-test)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (pre-test)
      shell: cmd
      run: ipconfig /displaydns
    - name: run OpenDDS tests
      shell: cmd
      run: |
        cd /d C:\OpenDDS
        call setenv.cmd
        cd ${{ github.job }}_autobuild_workspace
        perl "%GITHUB_WORKSPACE%\autobuild\autobuild.pl" "C:\OpenDDS\${{ github.job }}_autobuild_workspace\config.xml"
    - name: get network interface information (post-test)
      shell: cmd
      run: ipconfig /all
    - name: get DNS information (post-test)
      shell: cmd
      run: ipconfig /displaydns
    - name: upload autobuild output
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.job }}_autobuild_output
        path: C:\OpenDDS\${{ github.job }}_autobuild_workspace
    - name: check results
      shell: bash
      run: |
        /c/OpenDDS/tools/scripts/autobuild_brief_html_to_text.pl "/c/OpenDDS/${{ github.job }}_autobuild_workspace/output.log_Brief.html"
        cat "/c/OpenDDS/${{ github.job }}_autobuild_workspace/latest.txt"
        grep -q 'Failures: 0' "/c/OpenDDS/${{ github.job }}_autobuild_workspace/latest.txt"
